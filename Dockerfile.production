# Multi-stage build for production deployment
FROM node:18-alpine AS base
WORKDIR /app

# Install dependencies
FROM base AS deps
RUN apk add --no-cache libc6-compat
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Build the application
FROM base AS builder
COPY package*.json ./
RUN npm ci

COPY . .
RUN npm run build

# Build demo app specifically
WORKDIR /app/apps/demo
RUN npm run build

# Build storybook
WORKDIR /app/apps/storybook
RUN npm run build-storybook

# Production image
FROM nginx:alpine AS runner
WORKDIR /app

# Copy built applications
COPY --from=builder /app/apps/demo/.next/standalone ./demo
COPY --from=builder /app/apps/demo/.next/static ./demo/.next/static
COPY --from=builder /app/apps/demo/public ./demo/public

# Copy storybook
COPY --from=builder /app/apps/storybook/storybook-static ./storybook

# Create nginx configuration
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 3000;
    server_name localhost;
    root /app;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate max-age=0 no-transform;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Demo app (main site)
    location / {
        try_files \$uri \$uri/ @demo;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location @demo {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }

    # Storybook
    location /storybook/ {
        alias /app/storybook/;
        try_files \$uri \$uri/ /storybook/index.html;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
EOF

# Create startup script
COPY <<EOF /app/start.sh
#!/bin/sh
# Start the Next.js demo app in the background
cd /app/demo && node server.js &

# Start nginx in the foreground
nginx -g 'daemon off;'
EOF

RUN chmod +x /app/start.sh

EXPOSE 3000

CMD ["/app/start.sh"]