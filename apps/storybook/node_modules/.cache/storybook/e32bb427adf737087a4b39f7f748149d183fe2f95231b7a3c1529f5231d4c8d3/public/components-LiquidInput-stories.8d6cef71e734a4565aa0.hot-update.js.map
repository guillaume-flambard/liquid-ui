{"version":3,"file":"components-LiquidInput-stories.8d6cef71e734a4565aa0.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAMA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAIA","sources":["webpack://@liquid-ui/storybook/../../packages/react/src/components/LiquidInput.stories.tsx"],"sourcesContent":["import React from 'react'\nimport type { Meta, StoryObj } from '@storybook/react'\nimport { LiquidInput } from './LiquidInput'\n\nconst meta = {\n  title: 'Components/LiquidInput',\n  component: LiquidInput,\n  parameters: {\n    layout: 'centered',\n    backgrounds: {\n      default: 'gradient',\n      values: [\n        {\n          name: 'gradient',\n          value: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n        },\n        {\n          name: 'dark',\n          value: '#1a1a1a',\n        },\n        {\n          name: 'light',\n          value: '#f5f5f5',\n        },\n      ],\n    },\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: { type: 'select' },\n      options: ['frosted', 'clear', 'aurora', 'solid'],\n    },\n    intensity: {\n      control: { type: 'select' },\n      options: ['subtle', 'regular', 'strong'],\n    },\n    opacity: {\n      control: { type: 'select' },\n      options: ['light', 'regular', 'medium', 'strong'],\n    },\n    type: {\n      control: { type: 'select' },\n      options: ['text', 'email', 'password', 'number', 'tel', 'url'],\n    },\n  },\n} satisfies Meta<typeof LiquidInput>\n\nexport default meta\ntype Story = StoryObj<typeof meta>\n\nexport const Default: Story = {\n  args: {\n    placeholder: 'Enter text...',\n  },\n}\n\nexport const WithLabel: Story = {\n  args: {\n    label: 'Email Address',\n    placeholder: 'your@email.com',\n    type: 'email',\n  },\n}\n\nexport const WithHelperText: Story = {\n  args: {\n    label: 'Username',\n    placeholder: 'Choose a username',\n    helperText: 'Your username must be unique',\n  },\n}\n\nexport const WithError: Story = {\n  args: {\n    label: 'Password',\n    type: 'password',\n    placeholder: 'Enter password',\n    error: 'Password must be at least 8 characters',\n    value: '123',\n  },\n}\n\nexport const WithIcons: Story = {\n  render: () => (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem', minWidth: '300px' }}>\n      <LiquidInput\n        placeholder=\"Search...\"\n        leftIcon={\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n            <circle cx=\"6\" cy=\"6\" r=\"5\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n            <path d=\"M10 10l4 4\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n          </svg>\n        }\n      />\n      <LiquidInput\n        placeholder=\"Enter amount\"\n        type=\"number\"\n        leftIcon={<span style={{ color: 'rgba(255,255,255,0.7)' }}>$</span>}\n        rightIcon={<span style={{ color: 'rgba(255,255,255,0.7)' }}>.00</span>}\n      />\n      <LiquidInput\n        type=\"password\"\n        placeholder=\"Enter password\"\n        rightIcon={\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n            <path d=\"M8 2C3 2 0 8 0 8s3 6 8 6 8-6 8-6-3-6-8-6zm0 10c-2.2 0-4-1.8-4-4s1.8-4 4-4 4 1.8 4 4-1.8 4-4 4z\"/>\n            <circle cx=\"8\" cy=\"8\" r=\"2\"/>\n          </svg>\n        }\n      />\n    </div>\n  ),\n}\n\nexport const Variants: Story = {\n  render: () => (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem', minWidth: '300px' }}>\n      <LiquidInput variant=\"frosted\" placeholder=\"Frosted variant\" />\n      <LiquidInput variant=\"clear\" placeholder=\"Clear variant\" />\n      <LiquidInput variant=\"aurora\" placeholder=\"Aurora variant\" />\n      <LiquidInput variant=\"solid\" placeholder=\"Solid variant\" />\n    </div>\n  ),\n}\n\nexport const Disabled: Story = {\n  args: {\n    disabled: true,\n    value: 'Disabled input',\n  },\n}\n\nexport const FullWidth: Story = {\n  args: {\n    fullWidth: true,\n    placeholder: 'Full width input',\n  },\n  decorators: [\n    (Story) => (\n      <div style={{ width: '400px' }}>\n        <Story />\n      </div>\n    ),\n  ],\n}\n\nexport const CompleteForm: Story = {\n  render: () => (\n    <div style={{ \n      display: 'flex', \n      flexDirection: 'column', \n      gap: '1rem', \n      minWidth: '350px',\n      padding: '2rem',\n      background: 'rgba(255, 255, 255, 0.1)',\n      borderRadius: '16px',\n      backdropFilter: 'blur(10px)',\n    }}>\n      <h3 style={{ margin: 0, color: 'white' }}>Sign Up</h3>\n      <LiquidInput\n        label=\"Full Name\"\n        placeholder=\"John Doe\"\n        required\n      />\n      <LiquidInput\n        label=\"Email\"\n        type=\"email\"\n        placeholder=\"john@example.com\"\n        required\n      />\n      <LiquidInput\n        label=\"Password\"\n        type=\"password\"\n        placeholder=\"Min 8 characters\"\n        helperText=\"Use a mix of letters, numbers and symbols\"\n        required\n      />\n      <LiquidInput\n        label=\"Phone Number\"\n        type=\"tel\"\n        placeholder=\"+1 (555) 000-0000\"\n      />\n    </div>\n  ),\n}"],"names":[],"sourceRoot":""}