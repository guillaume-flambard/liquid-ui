"use strict";
self["webpackHotUpdate_liquid_ui_storybook"]("LiquidButton-stories",{

/***/ "../../packages/react/src/components/LiquidModal.tsx":
/*!***********************************************************!*\
  !*** ../../packages/react/src/components/LiquidModal.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LiquidModal: () => (/* binding */ LiquidModal)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "../../node_modules/react-dom/index.js");
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ "../../node_modules/clsx/dist/clsx.mjs");
/* harmony import */ var _hooks_useLiquidGlass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks/useLiquidGlass */ "../../packages/react/src/hooks/useLiquidGlass.ts");




/**
 * LiquidModal - Glass modal and overlay component
 * 
 * A beautiful modal with liquid glass effects, perfect for dialogs and overlays.
 * Includes backdrop blur, keyboard navigation, and accessibility features.
 */ const LiquidModal = ({ open, onClose, title, showCloseButton = true, closeOnBackdropClick = true, closeOnEscape = true, size = 'md', centered = true, variant = 'frosted', intensity = 'strong', opacity = 'regular', interactive = false, adaptiveOpacity = false, environmentBlending = true, className, children })=>{
    const modalRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
    const backdropRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
    // Generate glass styles for the modal content
    const glassStyles = (0,_hooks_useLiquidGlass__WEBPACK_IMPORTED_MODULE_3__.useLiquidGlass)({
        variant,
        intensity,
        opacity,
        interactive,
        adaptiveOpacity,
        environmentBlending
    });
    // Generate backdrop glass styles
    const backdropGlassStyles = (0,_hooks_useLiquidGlass__WEBPACK_IMPORTED_MODULE_3__.useLiquidGlass)({
        variant: 'dark',
        intensity: 'regular',
        opacity: 'light',
        interactive: false,
        adaptiveOpacity: false,
        environmentBlending: true
    });
    // Size classes
    const sizeClasses = {
        sm: 'max-w-sm',
        md: 'max-w-md',
        lg: 'max-w-lg',
        xl: 'max-w-xl'
    };
    // Handle escape key
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        if (!open || !closeOnEscape) return;
        const handleKeyDown = (e)=>{
            if (e.key === 'Escape') {
                onClose();
            }
        };
        document.addEventListener('keydown', handleKeyDown);
        return ()=>document.removeEventListener('keydown', handleKeyDown);
    }, [
        open,
        closeOnEscape,
        onClose
    ]);
    // Handle focus management
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        if (!open) return;
        const previousActiveElement = document.activeElement;
        // Focus the modal when opened
        if (modalRef.current) {
            modalRef.current.focus();
        }
        // Restore focus when closed
        return ()=>{
            if (previousActiveElement && previousActiveElement.focus) {
                previousActiveElement.focus();
            }
        };
    }, [
        open
    ]);
    // Handle body scroll lock
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        if (!open) return;
        const originalStyle = window.getComputedStyle(document.body).overflow;
        document.body.style.overflow = 'hidden';
        return ()=>{
            document.body.style.overflow = originalStyle;
        };
    }, [
        open
    ]);
    // Handle backdrop click
    const handleBackdropClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        if (closeOnBackdropClick && e.target === backdropRef.current) {
            onClose();
        }
    }, [
        closeOnBackdropClick,
        onClose
    ]);
    // Handle close button click
    const handleCloseClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{
        onClose();
    }, [
        onClose
    ]);
    if (!open) return null;
    const modalContent = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        ref: backdropRef,
        className: (0,clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)('liquid-modal-backdrop', 'fixed', 'inset-0', 'z-50', 'flex', 'items-center', 'justify-center', 'p-4', 'min-h-screen', centered ? 'items-center' : 'items-start pt-16'),
        style: backdropGlassStyles,
        onClick: handleBackdropClick
    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        ref: modalRef,
        className: (0,clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)('liquid-modal', 'relative', 'w-full', sizeClasses[size], 'max-h-[90vh]', 'overflow-hidden', 'rounded-xl', 'border', 'border-white/10', 'shadow-2xl', 'transform', 'transition-all', 'duration-300', 'ease-out', 'animate-in', 'fade-in-0', 'zoom-in-95', className),
        style: glassStyles,
        tabIndex: -1,
        role: "dialog",
        "aria-modal": "true",
        "aria-labelledby": title ? 'modal-title' : undefined
    }, (title || showCloseButton) && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        className: "liquid-modal-header flex items-center justify-between p-6 border-b border-white/10"
    }, title && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h2", {
        id: "modal-title",
        className: "text-lg font-semibold text-white"
    }, title), showCloseButton && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
        type: "button",
        className: (0,clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)('flex', 'items-center', 'justify-center', 'w-8', 'h-8', 'rounded-full', 'text-gray-400', 'hover:text-white', 'hover:bg-white/10', 'transition-colors', 'duration-200'),
        onClick: handleCloseClick,
        "aria-label": "Close modal"
    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
        className: "w-4 h-4",
        fill: "none",
        stroke: "currentColor",
        viewBox: "0 0 24 24"
    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M6 18L18 6M6 6l12 12"
    })))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        className: "liquid-modal-content overflow-y-auto max-h-full"
    }, children)));
    // Render modal in a portal
    return /*#__PURE__*/ (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(modalContent, document.body);
};
LiquidModal.displayName = 'LiquidModal';

try {
    // @ts-ignore
    LiquidModal.displayName = "LiquidModal";
    // @ts-ignore
    LiquidModal.__docgenInfo = { "description": "LiquidModal - Glass modal and overlay component\n\nA beautiful modal with liquid glass effects, perfect for dialogs and overlays.\nIncludes backdrop blur, keyboard navigation, and accessibility features.", "displayName": "LiquidModal", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["../../packages/react/src/components/LiquidModal.tsx#LiquidModal"] = { docgenInfo: LiquidModal.__docgenInfo, name: "LiquidModal", path: "../../packages/react/src/components/LiquidModal.tsx#LiquidModal" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "../../packages/react/src/hooks/useAdaptiveGlass.ts":
/*!**********************************************************!*\
  !*** ../../packages/react/src/hooks/useAdaptiveGlass.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useAdaptiveGlass: () => (/* binding */ useAdaptiveGlass)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _liquid_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @liquid-ui/core */ "../../packages/core/src/index.ts");


/**
 * useAdaptiveGlass - Hook for adaptive glass effects based on background
 * 
 * This hook analyzes the background behind the glass element and adjusts
 * opacity and tint automatically for optimal visual contrast and readability.
 */ function useAdaptiveGlass({ elementRef, config, enabled = true, debounceMs = 100 }) {
    const [adaptiveStyles, setAdaptiveStyles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});
    const [backgroundLuminance, setBackgroundLuminance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0.5);
    // Analyze background and calculate adaptive styles
    const analyzeBackground = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((0,_liquid_ui_core__WEBPACK_IMPORTED_MODULE_1__.debounce)(()=>{
        if (!enabled || !elementRef.current) return;
        const element = elementRef.current;
        const computedStyle = window.getComputedStyle(element.parentElement || element);
        const backgroundColor = computedStyle.backgroundColor;
        // Parse background color and calculate luminance
        const colorData = (0,_liquid_ui_core__WEBPACK_IMPORTED_MODULE_1__.parseColor)(backgroundColor);
        if (colorData) {
            const luminance = (0,_liquid_ui_core__WEBPACK_IMPORTED_MODULE_1__.calculateLuminance)(colorData.r, colorData.g, colorData.b);
            setBackgroundLuminance(luminance);
            // Generate adaptive background using the engine
            const engine = _liquid_ui_core__WEBPACK_IMPORTED_MODULE_1__.LiquidGlassEngine.getInstance();
            const adaptiveBackground = engine.getAdaptiveBackground(config, luminance);
            setAdaptiveStyles({
                background: adaptiveBackground,
                // Adjust border opacity based on background
                borderColor: luminance > 0.5 ? 'rgba(0, 0, 0, 0.1)' : 'rgba(255, 255, 255, 0.1)'
            });
        }
    }, debounceMs), [
        enabled,
        elementRef,
        config,
        debounceMs
    ]);
    // Set up intersection observer to detect background changes
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        if (!enabled || !elementRef.current) return;
        const element = elementRef.current;
        // Initial analysis
        analyzeBackground();
        // Create mutation observer to watch for style changes
        const observer = new MutationObserver((mutations)=>{
            const hasStyleChanges = mutations.some((mutation)=>mutation.type === 'attributes' && mutation.attributeName === 'style');
            if (hasStyleChanges) {
                analyzeBackground();
            }
        });
        // Observe parent elements for style changes
        let currentElement = element.parentElement;
        while(currentElement){
            observer.observe(currentElement, {
                attributes: true,
                attributeFilter: [
                    'style',
                    'class'
                ]
            });
            currentElement = currentElement.parentElement;
        }
        // Also listen for window resize (might change background)
        window.addEventListener('resize', analyzeBackground);
        return ()=>{
            observer.disconnect();
            window.removeEventListener('resize', analyzeBackground);
        };
    }, [
        enabled,
        elementRef,
        analyzeBackground
    ]);
    // Re-analyze when config changes
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        if (enabled) {
            analyzeBackground();
        }
    }, [
        config,
        analyzeBackground,
        enabled
    ]);
    return {
        adaptiveStyles,
        backgroundLuminance,
        reanalyze: analyzeBackground
    };
}


/***/ }),

/***/ "../../packages/react/src/index.ts":
/*!*****************************************!*\
  !*** ../../packages/react/src/index.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LiquidButton: () => (/* reexport safe */ _components_LiquidButton__WEBPACK_IMPORTED_MODULE_1__.LiquidButton),
/* harmony export */   LiquidCard: () => (/* reexport safe */ _components_LiquidCard__WEBPACK_IMPORTED_MODULE_0__.LiquidCard),
/* harmony export */   LiquidInput: () => (/* reexport safe */ _components_LiquidInput__WEBPACK_IMPORTED_MODULE_2__.LiquidInput),
/* harmony export */   LiquidModal: () => (/* reexport safe */ _components_LiquidModal__WEBPACK_IMPORTED_MODULE_3__.LiquidModal),
/* harmony export */   useAdaptiveGlass: () => (/* reexport safe */ _hooks_useAdaptiveGlass__WEBPACK_IMPORTED_MODULE_6__.useAdaptiveGlass),
/* harmony export */   useInteractiveGlass: () => (/* reexport safe */ _hooks_useInteractiveGlass__WEBPACK_IMPORTED_MODULE_5__.useInteractiveGlass),
/* harmony export */   useLiquidGlass: () => (/* reexport safe */ _hooks_useLiquidGlass__WEBPACK_IMPORTED_MODULE_4__.useLiquidGlass)
/* harmony export */ });
/* harmony import */ var _components_LiquidCard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/LiquidCard */ "../../packages/react/src/components/LiquidCard.tsx");
/* harmony import */ var _components_LiquidButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/LiquidButton */ "../../packages/react/src/components/LiquidButton.tsx");
/* harmony import */ var _components_LiquidInput__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/LiquidInput */ "../../packages/react/src/components/LiquidInput.tsx");
/* harmony import */ var _components_LiquidModal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/LiquidModal */ "../../packages/react/src/components/LiquidModal.tsx");
/* harmony import */ var _hooks_useLiquidGlass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hooks/useLiquidGlass */ "../../packages/react/src/hooks/useLiquidGlass.ts");
/* harmony import */ var _hooks_useInteractiveGlass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hooks/useInteractiveGlass */ "../../packages/react/src/hooks/useInteractiveGlass.ts");
/* harmony import */ var _hooks_useAdaptiveGlass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hooks/useAdaptiveGlass */ "../../packages/react/src/hooks/useAdaptiveGlass.ts");
// Components




// Hooks





/***/ })

});
//# sourceMappingURL=LiquidButton-stories.43bd96ed4a9d52002921.hot-update.js.map