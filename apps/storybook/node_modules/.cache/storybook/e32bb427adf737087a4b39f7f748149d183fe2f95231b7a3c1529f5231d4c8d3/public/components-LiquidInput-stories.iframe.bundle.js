"use strict";
(self["webpackChunk_liquid_ui_storybook"] = self["webpackChunk_liquid_ui_storybook"] || []).push([["components-LiquidInput-stories"],{

/***/ "../../packages/react/src/components/LiquidInput.stories.tsx":
/*!*******************************************************************!*\
  !*** ../../packages/react/src/components/LiquidInput.stories.tsx ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CompleteForm: () => (/* binding */ CompleteForm),
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   Disabled: () => (/* binding */ Disabled),
/* harmony export */   FullWidth: () => (/* binding */ FullWidth),
/* harmony export */   Variants: () => (/* binding */ Variants),
/* harmony export */   WithError: () => (/* binding */ WithError),
/* harmony export */   WithHelperText: () => (/* binding */ WithHelperText),
/* harmony export */   WithIcons: () => (/* binding */ WithIcons),
/* harmony export */   WithLabel: () => (/* binding */ WithLabel),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _LiquidInput__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LiquidInput */ "../../packages/react/src/components/LiquidInput.tsx");


const meta = {
  title: 'Components/LiquidInput',
  component: _LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput,
  parameters: {
    layout: 'centered',
    backgrounds: {
      default: 'gradient',
      values: [{
        name: 'gradient',
        value: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
      }, {
        name: 'dark',
        value: '#1a1a1a'
      }, {
        name: 'light',
        value: '#f5f5f5'
      }]
    }
  },
  tags: ['autodocs'],
  argTypes: {
    variant: {
      control: {
        type: 'select'
      },
      options: ['frosted', 'clear', 'aurora', 'solid']
    },
    intensity: {
      control: {
        type: 'select'
      },
      options: ['subtle', 'regular', 'strong']
    },
    opacity: {
      control: {
        type: 'select'
      },
      options: ['light', 'regular', 'medium', 'strong']
    },
    type: {
      control: {
        type: 'select'
      },
      options: ['text', 'email', 'password', 'number', 'tel', 'url']
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const Default = {
  args: {
    placeholder: 'Enter text...'
  }
};
const WithLabel = {
  args: {
    label: 'Email Address',
    placeholder: 'your@email.com',
    type: 'email'
  }
};
const WithHelperText = {
  args: {
    label: 'Username',
    placeholder: 'Choose a username',
    helperText: 'Your username must be unique'
  }
};
const WithError = {
  args: {
    label: 'Password',
    type: 'password',
    placeholder: 'Enter password',
    error: 'Password must be at least 8 characters',
    value: '123'
  }
};
const WithIcons = {
  render: () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      display: 'flex',
      flexDirection: 'column',
      gap: '1rem',
      minWidth: '300px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput, {
    placeholder: "Search...",
    leftIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "currentColor"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
      cx: "6",
      cy: "6",
      r: "5",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
      d: "M10 10l4 4",
      stroke: "currentColor",
      strokeWidth: "2"
    }))
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput, {
    placeholder: "Enter amount",
    type: "number",
    leftIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
      style: {
        color: 'rgba(255,255,255,0.7)'
      }
    }, "$"),
    rightIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
      style: {
        color: 'rgba(255,255,255,0.7)'
      }
    }, ".00")
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput, {
    type: "password",
    placeholder: "Enter password",
    rightIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "currentColor"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
      d: "M8 2C3 2 0 8 0 8s3 6 8 6 8-6 8-6-3-6-8-6zm0 10c-2.2 0-4-1.8-4-4s1.8-4 4-4 4 1.8 4 4-1.8 4-4 4z"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
      cx: "8",
      cy: "8",
      r: "2"
    }))
  }))
};
const Variants = {
  render: () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      display: 'flex',
      flexDirection: 'column',
      gap: '1rem',
      minWidth: '300px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput, {
    variant: "frosted",
    placeholder: "Frosted variant"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput, {
    variant: "clear",
    placeholder: "Clear variant"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput, {
    variant: "aurora",
    placeholder: "Aurora variant"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput, {
    variant: "solid",
    placeholder: "Solid variant"
  }))
};
const Disabled = {
  args: {
    disabled: true,
    value: 'Disabled input'
  }
};
const FullWidth = {
  args: {
    fullWidth: true,
    placeholder: 'Full width input'
  },
  decorators: [Story => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      width: '400px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Story, null))]
};
const CompleteForm = {
  render: () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      display: 'flex',
      flexDirection: 'column',
      gap: '1rem',
      minWidth: '350px',
      padding: '2rem',
      background: 'rgba(255, 255, 255, 0.1)',
      borderRadius: '16px',
      backdropFilter: 'blur(10px)'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h3", {
    style: {
      margin: 0,
      color: 'white'
    }
  }, "Sign Up"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput, {
    label: "Full Name",
    placeholder: "John Doe",
    required: true
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput, {
    label: "Email",
    type: "email",
    placeholder: "john@example.com",
    required: true
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput, {
    label: "Password",
    type: "password",
    placeholder: "Min 8 characters",
    helperText: "Use a mix of letters, numbers and symbols",
    required: true
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LiquidInput__WEBPACK_IMPORTED_MODULE_1__.LiquidInput, {
    label: "Phone Number",
    type: "tel",
    placeholder: "+1 (555) 000-0000"
  }))
};
;
const __namedExportsOrder = ["Default", "WithLabel", "WithHelperText", "WithError", "WithIcons", "Variants", "Disabled", "FullWidth", "CompleteForm"];
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    placeholder: 'Enter text...'\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
WithLabel.parameters = {
  ...WithLabel.parameters,
  docs: {
    ...WithLabel.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Email Address',\n    placeholder: 'your@email.com',\n    type: 'email'\n  }\n}",
      ...WithLabel.parameters?.docs?.source
    }
  }
};
WithHelperText.parameters = {
  ...WithHelperText.parameters,
  docs: {
    ...WithHelperText.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Username',\n    placeholder: 'Choose a username',\n    helperText: 'Your username must be unique'\n  }\n}",
      ...WithHelperText.parameters?.docs?.source
    }
  }
};
WithError.parameters = {
  ...WithError.parameters,
  docs: {
    ...WithError.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Password',\n    type: 'password',\n    placeholder: 'Enter password',\n    error: 'Password must be at least 8 characters',\n    value: '123'\n  }\n}",
      ...WithError.parameters?.docs?.source
    }
  }
};
WithIcons.parameters = {
  ...WithIcons.parameters,
  docs: {
    ...WithIcons.parameters?.docs,
    source: {
      originalSource: "{\n  render: () => <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '1rem',\n    minWidth: '300px'\n  }}>\n      <LiquidInput placeholder=\"Search...\" leftIcon={<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n            <circle cx=\"6\" cy=\"6\" r=\"5\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" />\n            <path d=\"M10 10l4 4\" stroke=\"currentColor\" strokeWidth=\"2\" />\n          </svg>} />\n      <LiquidInput placeholder=\"Enter amount\" type=\"number\" leftIcon={<span style={{\n      color: 'rgba(255,255,255,0.7)'\n    }}>$</span>} rightIcon={<span style={{\n      color: 'rgba(255,255,255,0.7)'\n    }}>.00</span>} />\n      <LiquidInput type=\"password\" placeholder=\"Enter password\" rightIcon={<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n            <path d=\"M8 2C3 2 0 8 0 8s3 6 8 6 8-6 8-6-3-6-8-6zm0 10c-2.2 0-4-1.8-4-4s1.8-4 4-4 4 1.8 4 4-1.8 4-4 4z\" />\n            <circle cx=\"8\" cy=\"8\" r=\"2\" />\n          </svg>} />\n    </div>\n}",
      ...WithIcons.parameters?.docs?.source
    }
  }
};
Variants.parameters = {
  ...Variants.parameters,
  docs: {
    ...Variants.parameters?.docs,
    source: {
      originalSource: "{\n  render: () => <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '1rem',\n    minWidth: '300px'\n  }}>\n      <LiquidInput variant=\"frosted\" placeholder=\"Frosted variant\" />\n      <LiquidInput variant=\"clear\" placeholder=\"Clear variant\" />\n      <LiquidInput variant=\"aurora\" placeholder=\"Aurora variant\" />\n      <LiquidInput variant=\"solid\" placeholder=\"Solid variant\" />\n    </div>\n}",
      ...Variants.parameters?.docs?.source
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...Disabled.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    disabled: true,\n    value: 'Disabled input'\n  }\n}",
      ...Disabled.parameters?.docs?.source
    }
  }
};
FullWidth.parameters = {
  ...FullWidth.parameters,
  docs: {
    ...FullWidth.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    fullWidth: true,\n    placeholder: 'Full width input'\n  },\n  decorators: [Story => <div style={{\n    width: '400px'\n  }}>\n        <Story />\n      </div>]\n}",
      ...FullWidth.parameters?.docs?.source
    }
  }
};
CompleteForm.parameters = {
  ...CompleteForm.parameters,
  docs: {
    ...CompleteForm.parameters?.docs,
    source: {
      originalSource: "{\n  render: () => <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '1rem',\n    minWidth: '350px',\n    padding: '2rem',\n    background: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: '16px',\n    backdropFilter: 'blur(10px)'\n  }}>\n      <h3 style={{\n      margin: 0,\n      color: 'white'\n    }}>Sign Up</h3>\n      <LiquidInput label=\"Full Name\" placeholder=\"John Doe\" required />\n      <LiquidInput label=\"Email\" type=\"email\" placeholder=\"john@example.com\" required />\n      <LiquidInput label=\"Password\" type=\"password\" placeholder=\"Min 8 characters\" helperText=\"Use a mix of letters, numbers and symbols\" required />\n      <LiquidInput label=\"Phone Number\" type=\"tel\" placeholder=\"+1 (555) 000-0000\" />\n    </div>\n}",
      ...CompleteForm.parameters?.docs?.source
    }
  }
};

/***/ })

}]);
//# sourceMappingURL=components-LiquidInput-stories.iframe.bundle.js.map