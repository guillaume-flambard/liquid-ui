"use strict";
(self["webpackChunk_liquid_ui_storybook"] = self["webpackChunk_liquid_ui_storybook"] || []).push([["packages_react_src_components_LiquidButton_tsx"],{

/***/ "../../node_modules/clsx/dist/clsx.mjs":
/*!*********************************************!*\
  !*** ../../node_modules/clsx/dist/clsx.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clsx: () => (/* binding */ clsx),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f)}else for(f in e)e[f]&&(n&&(n+=" "),n+=f);return n}function clsx(){for(var e,t,f=0,n="",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clsx);

/***/ }),

/***/ "../../packages/react/src/components/LiquidButton.tsx":
/*!************************************************************!*\
  !*** ../../packages/react/src/components/LiquidButton.tsx ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LiquidButton: () => (/* binding */ LiquidButton)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ "../../node_modules/clsx/dist/clsx.mjs");
/* harmony import */ var _hooks_useLiquidGlass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useLiquidGlass */ "../../packages/react/src/hooks/useLiquidGlass.ts");
/* harmony import */ var _hooks_useInteractiveGlass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks/useInteractiveGlass */ "../../packages/react/src/hooks/useInteractiveGlass.ts");




/**
 * LiquidButton - Interactive glass button component
 * 
 * A beautiful button with liquid glass effects, perfect for CTAs and interactive elements.
 * Includes loading states, icons, and responsive design.
 */ const LiquidButtonBase = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(({ variant = 'frosted', intensity = 'regular', opacity = 'regular', interactive = true, adaptiveOpacity = false, environmentBlending = false, size = 'md', fullWidth = false, loading = false, leftIcon, rightIcon, className, children, disabled, style, ...props }, ref)=>{
    const [isPressed, setIsPressed] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [isHovered, setIsHovered] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [ripples, setRipples] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
    const [focusVisible, setFocusVisible] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const buttonRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
    const rippleTimeouts = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());
    // Generate glass styles
    const glassStyles = (0,_hooks_useLiquidGlass__WEBPACK_IMPORTED_MODULE_2__.useLiquidGlass)({
        variant,
        intensity,
        opacity,
        interactive,
        adaptiveOpacity,
        environmentBlending
    });
    // Interactive physics effects
    const { handleMouseEnter, handleMouseLeave, handleMouseMove } = (0,_hooks_useInteractiveGlass__WEBPACK_IMPORTED_MODULE_3__.useInteractiveGlass)({
        elementRef: buttonRef,
        enabled: interactive && !disabled && !loading,
        onHover: (hovered)=>{
            setIsHovered(hovered);
        }
    });
    // Cleanup ripple timeouts on unmount
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        return ()=>{
            rippleTimeouts.current.forEach((timeout)=>clearTimeout(timeout));
            rippleTimeouts.current.clear();
        };
    }, []);
    // Create ripple effect
    const createRipple = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{
        if (disabled || loading) return;
        const button = buttonRef.current;
        if (!button) return;
        const rect = button.getBoundingClientRect();
        const size = Math.max(rect.width, rect.height);
        const x = event.clientX - rect.left - size / 2;
        const y = event.clientY - rect.top - size / 2;
        const ripple = {
            id: Date.now().toString(),
            x,
            y,
            size
        };
        setRipples((prev)=>[
                ...prev,
                ripple
            ]);
        // Remove ripple after animation
        const timeout = setTimeout(()=>{
            setRipples((prev)=>prev.filter((r)=>r.id !== ripple.id));
            rippleTimeouts.current.delete(ripple.id);
        }, 600);
        rippleTimeouts.current.set(ripple.id, timeout);
    }, [
        disabled,
        loading
    ]);
    // Size classes
    const sizeClasses = {
        sm: 'px-3 py-1.5 text-sm min-h-[2rem]',
        md: 'px-4 py-2 text-base min-h-[2.5rem]',
        lg: 'px-6 py-3 text-lg min-h-[3rem]'
    };
    // Handle mouse events
    const onMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        handleMouseEnter();
        props.onMouseEnter?.(e);
    }, [
        handleMouseEnter,
        props.onMouseEnter
    ]);
    const onMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        handleMouseLeave();
        setIsPressed(false);
        props.onMouseLeave?.(e);
    }, [
        handleMouseLeave,
        props.onMouseLeave
    ]);
    const onMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        handleMouseMove(e);
        props.onMouseMove?.(e);
    }, [
        handleMouseMove,
        props.onMouseMove
    ]);
    const onMouseDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        setIsPressed(true);
        createRipple(e);
        props.onMouseDown?.(e);
    }, [
        props.onMouseDown,
        createRipple
    ]);
    const onMouseUp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        setIsPressed(false);
        props.onMouseUp?.(e);
    }, [
        props.onMouseUp
    ]);
    const onFocus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        setFocusVisible(true);
        props.onFocus?.(e);
    }, [
        props.onFocus
    ]);
    const onBlur = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        setFocusVisible(false);
        props.onBlur?.(e);
    }, [
        props.onBlur
    ]);
    const onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        if (e.key === 'Enter' || e.key === ' ') {
            setIsPressed(true);
            // Create ripple effect for keyboard activation
            if (buttonRef.current) {
                const rect = buttonRef.current.getBoundingClientRect();
                const mockEvent = {
                    clientX: rect.left + rect.width / 2,
                    clientY: rect.top + rect.height / 2
                };
                createRipple(mockEvent);
            }
        }
        props.onKeyDown?.(e);
    }, [
        props.onKeyDown,
        createRipple
    ]);
    const onKeyUp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        if (e.key === 'Enter' || e.key === ' ') {
            setIsPressed(false);
        }
        props.onKeyUp?.(e);
    }, [
        props.onKeyUp
    ]);
    // Build classes
    const classes = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)(// Base button styles
    'liquid-button', 'relative', 'inline-flex', 'items-center', 'justify-center', 'gap-2', 'font-medium', 'rounded-lg', 'border', 'border-white/10', 'transition-all', 'duration-200', 'ease-out', 'focus:outline-none', focusVisible && [
        'ring-2',
        'ring-blue-500/50',
        'ring-offset-2',
        'ring-offset-transparent'
    ], 'transform-gpu', // Size styles
    sizeClasses[size], // Width styles
    fullWidth && 'w-full', // State styles
    !disabled && !loading && [
        'hover:shadow-lg',
        'hover:shadow-blue-500/25',
        'active:scale-[0.98]',
        isPressed && 'scale-[0.98]',
        isHovered && [
            'shadow-xl',
            'shadow-blue-500/30',
            'brightness-110'
        ]
    ], // Disabled styles
    (disabled || loading) && [
        'opacity-50',
        'cursor-not-allowed',
        'pointer-events-none'
    ], // Interactive styles
    interactive && !disabled && !loading && 'cursor-pointer', className);
    // Combine styles
    const combinedStyles = {
        ...glassStyles,
        ...style
    };
    // Loading spinner component
    const LoadingSpinner = ()=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
            className: "animate-spin h-4 w-4",
            fill: "none",
            viewBox: "0 0 24 24"
        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
            className: "opacity-25",
            cx: "12",
            cy: "12",
            r: "10",
            stroke: "currentColor",
            strokeWidth: "4"
        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
            className: "opacity-75",
            fill: "currentColor",
            d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
        }));
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
        ref: (node)=>{
            // Handle both forwarded ref and internal ref
            if (typeof ref === 'function') {
                ref(node);
            } else if (ref) {
                ref.current = node;
            }
            buttonRef.current = node;
        },
        className: classes,
        style: combinedStyles,
        disabled: disabled || loading,
        onMouseEnter: onMouseEnter,
        onMouseLeave: onMouseLeave,
        onMouseMove: onMouseMove,
        onMouseDown: onMouseDown,
        onMouseUp: onMouseUp,
        onFocus: onFocus,
        onBlur: onBlur,
        onKeyDown: onKeyDown,
        onKeyUp: onKeyUp,
        ...props
    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        className: "absolute inset-0 overflow-hidden rounded-lg pointer-events-none"
    }, ripples.map((ripple)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
            key: ripple.id,
            className: "absolute rounded-full bg-white/30 animate-ping",
            style: {
                left: ripple.x,
                top: ripple.y,
                width: ripple.size,
                height: ripple.size,
                animationDuration: '600ms',
                animationTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1)'
            }
        }))), loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LoadingSpinner, null), !loading && leftIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
        className: "flex-shrink-0"
    }, leftIcon), children && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
        className: loading ? 'opacity-0' : undefined
    }, children), !loading && rightIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
        className: "flex-shrink-0"
    }, rightIcon));
});
LiquidButtonBase.displayName = 'LiquidButton';
// Create the main component with proper typing
const LiquidButton = LiquidButtonBase;
// Preset components for easier usage
LiquidButton.Primary = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LiquidButtonBase, {
        ref: ref,
        variant: "frosted",
        intensity: "regular",
        interactive: true,
        ...props
    }));
LiquidButton.Primary.displayName = 'LiquidButton.Primary';
LiquidButton.Secondary = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LiquidButtonBase, {
        ref: ref,
        variant: "clear",
        opacity: "light",
        interactive: true,
        ...props
    }));
LiquidButton.Secondary.displayName = 'LiquidButton.Secondary';
LiquidButton.Tinted = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LiquidButtonBase, {
        ref: ref,
        variant: "tinted",
        intensity: "regular",
        interactive: true,
        ...props
    }));
LiquidButton.Tinted.displayName = 'LiquidButton.Tinted';
LiquidButton.Small = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LiquidButtonBase, {
        ref: ref,
        size: "sm",
        ...props
    }));
LiquidButton.Small.displayName = 'LiquidButton.Small';
LiquidButton.Large = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LiquidButtonBase, {
        ref: ref,
        size: "lg",
        ...props
    }));
LiquidButton.Large.displayName = 'LiquidButton.Large';

try {
    // @ts-ignore
    LiquidButton.displayName = "LiquidButton";
    // @ts-ignore
    LiquidButton.__docgenInfo = { "description": "", "displayName": "LiquidButton", "props": { "size": { "defaultValue": { value: "md" }, "description": "", "name": "size", "required": false, "type": { "name": "enum", "value": [{ "value": "\"sm\"" }, { "value": "\"md\"" }, { "value": "\"lg\"" }] } }, "fullWidth": { "defaultValue": { value: "false" }, "description": "", "name": "fullWidth", "required": false, "type": { "name": "boolean" } }, "loading": { "defaultValue": { value: "false" }, "description": "", "name": "loading", "required": false, "type": { "name": "boolean" } }, "leftIcon": { "defaultValue": null, "description": "", "name": "leftIcon", "required": false, "type": { "name": "ReactNode" } }, "rightIcon": { "defaultValue": null, "description": "", "name": "rightIcon", "required": false, "type": { "name": "ReactNode" } }, "variant": { "defaultValue": { value: "frosted" }, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"clear\"" }, { "value": "\"frosted\"" }, { "value": "\"tinted\"" }, { "value": "\"dark\"" }, { "value": "\"aurora\"" }, { "value": "\"solid\"" }] } }, "intensity": { "defaultValue": { value: "regular" }, "description": "", "name": "intensity", "required": false, "type": { "name": "enum", "value": [{ "value": "\"subtle\"" }, { "value": "\"regular\"" }, { "value": "\"strong\"" }, { "value": "\"none\"" }] } }, "opacity": { "defaultValue": { value: "regular" }, "description": "", "name": "opacity", "required": false, "type": { "name": "enum", "value": [{ "value": "\"regular\"" }, { "value": "\"strong\"" }, { "value": "\"light\"" }, { "value": "\"medium\"" }] } }, "interactive": { "defaultValue": { value: "true" }, "description": "", "name": "interactive", "required": false, "type": { "name": "boolean" } }, "adaptiveOpacity": { "defaultValue": { value: "false" }, "description": "", "name": "adaptiveOpacity", "required": false, "type": { "name": "boolean" } }, "environmentBlending": { "defaultValue": { value: "false" }, "description": "", "name": "environmentBlending", "required": false, "type": { "name": "boolean" } }, "className": { "defaultValue": null, "description": "", "name": "className", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["../../packages/react/src/components/LiquidButton.tsx#LiquidButton"] = { docgenInfo: LiquidButton.__docgenInfo, name: "LiquidButton", path: "../../packages/react/src/components/LiquidButton.tsx#LiquidButton" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

}]);
//# sourceMappingURL=packages_react_src_components_LiquidButton_tsx.iframe.bundle.js.map