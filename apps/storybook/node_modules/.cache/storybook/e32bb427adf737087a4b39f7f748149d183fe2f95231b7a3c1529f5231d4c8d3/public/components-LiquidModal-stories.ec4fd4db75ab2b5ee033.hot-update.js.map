{"version":3,"file":"components-LiquidModal-stories.ec4fd4db75ab2b5ee033.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AASA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA","sources":["webpack://@liquid-ui/storybook/../../packages/react/src/components/LiquidModal.stories.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport type { Meta, StoryObj } from '@storybook/react'\nimport { LiquidModal } from './LiquidModal'\nimport { LiquidButton } from './LiquidButton'\n\nconst meta = {\n  title: 'Components/LiquidModal',\n  component: LiquidModal,\n  parameters: {\n    layout: 'centered',\n    backgrounds: {\n      default: 'gradient',\n      values: [\n        {\n          name: 'gradient',\n          value: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n        },\n        {\n          name: 'dark',\n          value: '#1a1a1a',\n        },\n        {\n          name: 'light',\n          value: '#f5f5f5',\n        },\n      ],\n    },\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: { type: 'select' },\n      options: ['frosted', 'clear', 'aurora', 'solid'],\n    },\n    intensity: {\n      control: { type: 'select' },\n      options: ['subtle', 'regular', 'strong'],\n    },\n    opacity: {\n      control: { type: 'select' },\n      options: ['light', 'regular', 'medium', 'strong'],\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg', 'xl'],\n    },\n  },\n} satisfies Meta<typeof LiquidModal>\n\nexport default meta\ntype Story = StoryObj<typeof meta>\n\nexport const Default: Story = {\n  render: () => {\n    const [isOpen, setIsOpen] = useState(false)\n    return (\n      <>\n        <LiquidButton onClick={() => setIsOpen(true)}>\n          Open Modal\n        </LiquidButton>\n        <LiquidModal\n          open={isOpen}\n          onClose={() => setIsOpen(false)}\n          title=\"Default Modal\"\n        >\n          <p style={{ color: 'rgba(255, 255, 255, 0.9)' }}>\n            This is a beautiful liquid glass modal with smooth animations and backdrop blur.\n          </p>\n        </LiquidModal>\n      </>\n    )\n  },\n}\n\nexport const Sizes: Story = {\n  render: () => {\n    const [openSize, setOpenSize] = useState<string | null>(null)\n    const sizes = ['sm', 'md', 'lg', 'xl'] as const\n    \n    return (\n      <>\n        <div style={{ display: 'flex', gap: '1rem' }}>\n          {sizes.map(size => (\n            <LiquidButton key={size} onClick={() => setOpenSize(size)}>\n              Open {size.toUpperCase()}\n            </LiquidButton>\n          ))}\n        </div>\n        {sizes.map(size => (\n          <LiquidModal\n            key={size}\n            open={openSize === size}\n            onClose={() => setOpenSize(null)}\n            title={`${size.toUpperCase()} Modal`}\n            size={size}\n          >\n            <p style={{ color: 'rgba(255, 255, 255, 0.9)' }}>\n              This is a {size} sized modal. Notice how the width changes based on the size prop.\n            </p>\n          </LiquidModal>\n        ))}\n      </>\n    )\n  },\n}\n\nexport const WithoutCloseButton: Story = {\n  render: () => {\n    const [isOpen, setIsOpen] = useState(false)\n    return (\n      <>\n        <LiquidButton onClick={() => setIsOpen(true)}>\n          Open Modal\n        </LiquidButton>\n        <LiquidModal\n          open={isOpen}\n          onClose={() => setIsOpen(false)}\n          title=\"No Close Button\"\n          showCloseButton={false}\n        >\n          <p style={{ color: 'rgba(255, 255, 255, 0.9)' }}>\n            This modal doesn't show a close button. Click outside or press ESC to close.\n          </p>\n        </LiquidModal>\n      </>\n    )\n  },\n}\n\nexport const PreventBackdropClose: Story = {\n  render: () => {\n    const [isOpen, setIsOpen] = useState(false)\n    return (\n      <>\n        <LiquidButton onClick={() => setIsOpen(true)}>\n          Open Modal\n        </LiquidButton>\n        <LiquidModal\n          open={isOpen}\n          onClose={() => setIsOpen(false)}\n          title=\"Persistent Modal\"\n          closeOnBackdropClick={false}\n        >\n          <p style={{ color: 'rgba(255, 255, 255, 0.9)' }}>\n            This modal won't close when you click the backdrop. You must use the close button or ESC key.\n          </p>\n        </LiquidModal>\n      </>\n    )\n  },\n}\n\nexport const Centered: Story = {\n  render: () => {\n    const [isOpen, setIsOpen] = useState(false)\n    return (\n      <>\n        <LiquidButton onClick={() => setIsOpen(true)}>\n          Open Centered Modal\n        </LiquidButton>\n        <LiquidModal\n          open={isOpen}\n          onClose={() => setIsOpen(false)}\n          title=\"Centered Modal\"\n          centered\n        >\n          <p style={{ color: 'rgba(255, 255, 255, 0.9)' }}>\n            This modal is perfectly centered on the screen.\n          </p>\n        </LiquidModal>\n      </>\n    )\n  },\n}\n\nexport const ComplexContent: Story = {\n  render: () => {\n    const [isOpen, setIsOpen] = useState(false)\n    return (\n      <>\n        <LiquidButton onClick={() => setIsOpen(true)}>\n          Open Complex Modal\n        </LiquidButton>\n        <LiquidModal\n          open={isOpen}\n          onClose={() => setIsOpen(false)}\n          title=\"Subscribe to Newsletter\"\n          size=\"lg\"\n        >\n          <div style={{ color: 'rgba(255, 255, 255, 0.9)' }}>\n            <p style={{ marginBottom: '1.5rem' }}>\n              Stay updated with our latest news and updates. We promise not to spam!\n            </p>\n            \n            <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n              <input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                style={{\n                  padding: '0.75rem',\n                  borderRadius: '8px',\n                  border: '1px solid rgba(255, 255, 255, 0.2)',\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  color: 'white',\n                  fontSize: '1rem',\n                  backdropFilter: 'blur(10px)',\n                }}\n              />\n              \n              <div style={{ display: 'flex', gap: '0.5rem', alignItems: 'center' }}>\n                <input type=\"checkbox\" id=\"terms\" />\n                <label htmlFor=\"terms\" style={{ fontSize: '0.9rem' }}>\n                  I agree to the terms and conditions\n                </label>\n              </div>\n              \n              <div style={{ display: 'flex', gap: '1rem', marginTop: '1rem' }}>\n                <LiquidButton fullWidth variant=\"aurora\">\n                  Subscribe\n                </LiquidButton>\n                <LiquidButton fullWidth variant=\"clear\" onClick={() => setIsOpen(false)}>\n                  Cancel\n                </LiquidButton>\n              </div>\n            </div>\n          </div>\n        </LiquidModal>\n      </>\n    )\n  },\n}\n\nexport const Variants: Story = {\n  render: () => {\n    const [openVariant, setOpenVariant] = useState<string | null>(null)\n    const variants = ['frosted', 'clear', 'aurora', 'solid'] as const\n    \n    return (\n      <>\n        <div style={{ display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>\n          {variants.map(variant => (\n            <LiquidButton key={variant} variant={variant} onClick={() => setOpenVariant(variant)}>\n              {variant.charAt(0).toUpperCase() + variant.slice(1)} Modal\n            </LiquidButton>\n          ))}\n        </div>\n        {variants.map(variant => (\n          <LiquidModal\n            key={variant}\n            open={openVariant === variant}\n            onClose={() => setOpenVariant(null)}\n            title={`${variant.charAt(0).toUpperCase() + variant.slice(1)} Variant`}\n            variant={variant}\n          >\n            <p style={{ color: 'rgba(255, 255, 255, 0.9)' }}>\n              This modal uses the {variant} glass variant. Notice the different visual effects!\n            </p>\n          </LiquidModal>\n        ))}\n      </>\n    )\n  },\n}"],"names":[],"sourceRoot":""}