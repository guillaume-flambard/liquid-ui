"use strict";
self["webpackHotUpdate_liquid_ui_storybook"]("components-LiquidCard-stories",{

/***/ "../../packages/react/src/components/LiquidCard.tsx":
/*!**********************************************************!*\
  !*** ../../packages/react/src/components/LiquidCard.tsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ "../../node_modules/clsx/dist/clsx.mjs");
/* harmony import */ var _hooks_useLiquidGlass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useLiquidGlass */ "../../packages/react/src/hooks/useLiquidGlass.ts");
/* harmony import */ var _hooks_useInteractiveGlass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks/useInteractiveGlass */ "../../packages/react/src/hooks/useInteractiveGlass.ts");




/**
 * LiquidCard - The signature Liquid UI component
 * 
 * A beautiful glass card with Apple-style liquid glass effects, perfect physics,
 * and smooth animations. This is the cornerstone component of Liquid UI.
 */ const LiquidCardBase = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(({ variant = 'frosted', intensity = 'regular', opacity = 'regular', interactive = true, adaptiveOpacity = false, environmentBlending = false, hover = true, shadow = true, border = true, className, children, onHover, style, ...props }, ref)=>{
    const [isHovered, setIsHovered] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const cardRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
    // Use our custom hooks for glass effects
    const glassStyles = (0,_hooks_useLiquidGlass__WEBPACK_IMPORTED_MODULE_2__.useLiquidGlass)({
        variant,
        intensity,
        opacity,
        interactive,
        adaptiveOpacity,
        environmentBlending
    });
    const { handleMouseEnter, handleMouseLeave, handleMouseMove } = (0,_hooks_useInteractiveGlass__WEBPACK_IMPORTED_MODULE_3__.useInteractiveGlass)({
        elementRef: cardRef,
        enabled: interactive && hover,
        onHover: (hovered)=>{
            setIsHovered(hovered);
            onHover?.(hovered);
        }
    });
    // Combine all mouse event handlers
    const onMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        handleMouseEnter();
        props.onMouseEnter?.(e);
    }, [
        handleMouseEnter,
        props.onMouseEnter
    ]);
    const onMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        handleMouseLeave();
        props.onMouseLeave?.(e);
    }, [
        handleMouseLeave,
        props.onMouseLeave
    ]);
    const onMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{
        handleMouseMove(e);
        props.onMouseMove?.(e);
    }, [
        handleMouseMove,
        props.onMouseMove
    ]);
    // Build CSS classes
    const classes = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)(// Base glass card styles
    'liquid-card', 'relative', 'overflow-hidden', 'transition-all', 'duration-200', 'ease-out', // Border styles
    border && 'border border-white/10', // Shadow styles
    shadow && [
        'shadow-lg',
        isHovered && interactive && 'shadow-xl'
    ], // Interactive styles
    interactive && [
        'cursor-pointer',
        'transform-gpu',
        hover && 'hover:scale-[1.02]',
        isHovered && 'scale-[1.02]'
    ], // Custom className
    className);
    // Merge styles
    const combinedStyles = {
        ...glassStyles,
        ...style
    };
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        ref: (node)=>{
            // Handle both forwarded ref and internal ref
            if (typeof ref === 'function') {
                ref(node);
            } else if (ref) {
                ref.current = node;
            }
            if (cardRef.current !== node) {
                cardRef.current = node;
            }
        },
        className: classes,
        style: combinedStyles,
        onMouseEnter: onMouseEnter,
        onMouseLeave: onMouseLeave,
        onMouseMove: onMouseMove,
        ...props
    }, children);
});
LiquidCard.displayName = 'LiquidCard';
// Preset components for easier usage
LiquidCard.Frosted = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LiquidCard, {
        ref: ref,
        variant: "frosted",
        intensity: "regular",
        interactive: true,
        hover: true,
        shadow: true,
        ...props
    }));
LiquidCard.Frosted.displayName = 'LiquidCard.Frosted';
LiquidCard.Clear = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LiquidCard, {
        ref: ref,
        variant: "clear",
        opacity: "light",
        interactive: true,
        hover: true,
        ...props
    }));
LiquidCard.Clear.displayName = 'LiquidCard.Clear';
LiquidCard.Tinted = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LiquidCard, {
        ref: ref,
        variant: "tinted",
        intensity: "regular",
        interactive: true,
        hover: true,
        shadow: true,
        ...props
    }));
LiquidCard.Tinted.displayName = 'LiquidCard.Tinted';
LiquidCard.Interactive = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LiquidCard, {
        ref: ref,
        interactive: true,
        hover: true,
        shadow: true,
        border: true,
        ...props
    }));
LiquidCard.Interactive.displayName = 'LiquidCard.Interactive';
LiquidCard.Static = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LiquidCard, {
        ref: ref,
        interactive: false,
        hover: false,
        shadow: false,
        ...props
    }));
LiquidCard.Static.displayName = 'LiquidCard.Static';


/***/ })

});
//# sourceMappingURL=components-LiquidCard-stories.11618d839529e7db07a9.hot-update.js.map